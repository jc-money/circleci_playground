defaults: &defaults
  working_directory: ~/work
  docker:
    - image: circleci/node:latest


version: 2

jobs:


  checkout_and_test:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          name: "Restore Cache (./node_modules)"
          key: dependencies_{{ checksum "package.json" }}

      - run:
          name: "NPM Install"
          command: npm install

      - save_cache:
          name: "Save Cache (./node_modules)"
          paths:
            - node_modules
          key: dependencies_{{ checksum "package.json" }}

      - run:
          name: "Show Tool Versions"
          command: |
            docker --version
            echo "Node version: $(node --version)"
            echo "NPM version: $(npm --version)"

      - run:
          name: "Run Linter"
          # command: npm run list
          command: npx eslint ./

      - run:
          name: "Run Unit Tests"
          command: npm test

      - persist_to_workspace:
          root: .
          paths:
            - .


  setup_to_use_harbor:
    <<: *defaults

    steps:
      - attach_workspace:
          at: .

                
      - persist_to_workspace:
          root: .
          paths:
            - .


  build_and_catalog:
    <<: *defaults

    steps:
      - attach_workspace:
          at: .

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: "Export (show env vars)"
          command: export

      - run:
          name: "Create harbor.props file"
          command: |
            echo "SHIPMENT=${DEFAULT_HARBOR_SHIPMENT}" > harbor.props
            case $CIRCLE_BRANCH in
              develop)
                echo "HARBOR_ENV=dev" >> harbor.props
                echo "BUILD_TOKEN=${BUILD_TOKEN_FOR_DEV}" >> harbor.props
                ;;
              master)
                echo "HARBOR_ENV=prod2" >> harbor.props
                echo "BUILD_TOKEN=${BUILD_TOKEN_FOR_PROD2}" >> harbor.props
                ;;
              qa)
                echo "HARBOR_ENV=qa" >> harbor.props
                echo "BUILD_TOKEN=${BUILD_TOKEN_FOR_QA}" >> harbor.props
                ;;
              ref)
                echo "HARBOR_ENV=ref" >> harbor.props
                echo "BUILD_TOKEN=${BUILD_TOKEN_FOR_REF}" >> harbor.props
                ;;
              staging)
                echo "HARBOR_ENV=staging" >> harbor.props
                echo "BUILD_TOKEN=${BUILD_TOKEN_FOR_STAGING}" >> harbor.props
                ;;
              test1)
                echo "HARBOR_ENV=private-jczuy" >> harbor.props
                echo "BUILD_TOKEN=${BUILD_TOKEN_FOR_JCZUY}" >> harbor.props
                ;;
            esac

      - run:
          name: "List Files (ls -l $(pwd))"
          command: ls -l $(pwd)

      - run:
          name: "Docker: Login to QUAY"
          command: echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USER}" --password-stdin quay.io

      - run:
          name: "Harbor: Get image name using harbor-deploy"
          command: |
            # From: https://circleci.com/docs/2.0/building-docker-images/#mounting-folders
            # creating dummy container which will hold a volume with config
            docker create -v /data --name data alpine:latest /bin/true
            # copying config file into this volume
            docker cp ./package.json data:/data
            docker run --volumes-from data quay.io/turner/harbor-deploy set_build_values \
              --branch=$(echo "${CIRCLE_BRANCH}" | tr "_" "-") \
              --build_num="${CIRCLE_BUILD_NUM}" > image.props

      - run:
          name: "Show Image Env Vars"
          command: cat image.props

      - run:
          name: "Docker: Build Docker Image"
          command: |
            source image.props
            docker build --rm=false -t "${IMAGE}" .

      - run:
          name: "Docker: Push Docker Image"
          command: |
            source image.props
            docker push "${IMAGE}"

      - run:
          name: "Show harbor.props file"
          command: cat harbor.props

      - run:
          name: "Harbor: Catalog the docker image (into QUAY)"
          command: |
            source image.props
            source harbor.props
            docker run --env-file image.props quay.io/turner/harbor-deploy catalog \
              --shipment="${SHIPMENT}" \
              --environment="${HARBOR_ENV}" \
              --token="${BUILD_TOKEN}"

      - persist_to_workspace:
          root: .
          paths:
            - .


  deploy_to_harbor:
    <<: *defaults

    steps:
      - attach_workspace:
          at: .

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: "Show Image Env Vars"
          command: cat image.props

      - run:
          name: "Show harbor.props file"
          command: cat harbor.props

      - run:
          name: "Harbor: Deploy the docker image to Harbor"
          command: |
            source image.props
            source harbor.props
            docker run --env-file image.props quay.io/turner/harbor-deploy deploy \
              --shipment="${SHIPMENT}" \
              --environment="${HARBOR_ENV}" \
              --token="${BUILD_TOKEN}"

      - persist_to_workspace:
          root: .
          paths:
            - .


workflows:
  version: 2

  MAIN_WORKFLOW:
    jobs:

      - checkout_and_test

      - build_and_catalog:
          requires:
            - checkout_and_test
          filters:
            branches:
              only:
                - develop
                - master
                - qa
                - ref
                - staging
                - test1
                - test2

      - deploy_to_harbor:
          requires:
            - build_and_catalog
          filters:
            branches:
              only:
                - develop

